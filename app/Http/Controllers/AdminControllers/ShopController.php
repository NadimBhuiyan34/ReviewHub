<?php

namespace App\Http\Controllers\AdminControllers;

use App\Http\Controllers\Controller;
use App\Http\Requests\Shop\StoreShopRequest as ShopStoreShopRequest;
use App\Http\Requests\Shop\UpdateShopRequest as ShopUpdateShopRequest;
use App\Models\Shop;
use App\Http\Requests\StoreShopRequest;
use App\Http\Requests\UpdateShopRequest;

class ShopController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
         // Fetch all categories from the database
         $shops = Shop::latest()->paginate(10); // Paginate with 10 items per page

         // Return the view and pass the data
         return view('AdminPages.Shop.index', compact('shops'));
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(ShopStoreShopRequest $request)
    {
        // Use the validated data from the request
        $validatedData = $request->validated();
    
        // Create a new category. The slug is automatically generated by the model.
        Shop::create($validatedData);
    
        // Redirect to the category index page with a success message
        return redirect()->route('shops.index')
            ->with('success', 'Shops added successfully!');
    }

    /**
     * Display the specified resource.
     */
    public function show(Shop $shop)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(Shop $shop)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(ShopUpdateShopRequest $request, Shop $shop)
    {
        $shop->update($request->validated());

        // Redirect back with a success message
        return redirect()->route('shops.index')->with('success', 'Shop updated successfully');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Shop $shop)
    {
        $shop->delete();

        return redirect()->route('shops.index')
            ->with('success', 'Shop deleted successfully!');
    }
}
